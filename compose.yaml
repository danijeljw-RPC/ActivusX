services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.WebApp
      target: final
    container_name: webapp
    ports:
      - 8080:8080
    depends_on:
      - db
      - api
    restart: always  

  api:
    build:
      context: ./
      dockerfile: Dockerfile.API
    container_name: api
    ports:
      - 5000:8080
    depends_on:
      - db
    restart: always

  db:
    image: postgres
    container_name: db
    user: postgres
    ports: 
      - 5432:5432
    secrets:
      - db-password
    volumes:
      - activusx-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  adminer:
    image: adminer:4.8.1-standalone
    container_name: adminer
    ports:
      - 8082:8080
    depends_on:
      - db
    restart: always

volumes:
  activusx-db-data:
secrets:
  db-password:
    file: db/password.txt
